# name: Docker CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: "ubuntu-latest"
#     steps:
#       - uses: actions/checkout@v4

#       # Needed for cargo-make
#       - name: Set up Rust
#         uses: dtolnay/rust-toolchain@stable

#       - name: Install cargo make
#         run: cargo install cargo-make

#       - name: get Sysbox
#         run: wget https://downloads.nestybox.com/sysbox/releases/v0.6.1/sysbox-ce_0.6.1-0.linux_amd64.deb

#       - name: Install Sysbox
#         run: sudo apt-get install ./sysbox-ce_0.6.1-0.linux_amd64.deb

#       - name: Configure Sysbox runtime
#         run: sudo cp sysbox/daemon.json /etc/docker/daemon.json

#       - name: Restart docker service
#         run: sudo systemctl restart docker.service

#       - name: Build docker
#         run: cargo make docker-build

#       - name: Run docker
#         run: cargo make docker-run

#       - name: Allow Docker image to boot up
#         uses: juliangruber/sleep-action@v1
#         with:
#           time: 200s

#       # Needed to run tests
#       - name: Install npm dependencies
#         run: cargo make deps-npm

#       - name: Test
#         run: cargo make test-app

#       - name: Show logs
#         run: cargo make docker-log

#         # New steps added below for Docker push
#       - name: Log in to Docker Hub
#         if: github.ref == 'refs/heads/main'
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Tag Docker image
#         if: github.ref == 'refs/heads/main'
#         run: docker tag zsolangpg ahmadsamehh/zsolangpg:latest

#       - name: Push Docker image
#         if: github.ref == 'refs/heads/main'
#         run: docker push ahmadsamehh/zsolangpg:latest



##########################################NEW MANUS EDIT ##########################################
name: Docker CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      # Needed for cargo-make
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo make
        run: cargo install cargo-make

      - name: Get Sysbox
        run: wget https://downloads.nestybox.com/sysbox/releases/v0.6.1/sysbox-ce_0.6.1-0.linux_amd64.deb

      - name: Install Sysbox
        run: sudo apt-get update && sudo apt-get install -y ./sysbox-ce_0.6.1-0.linux_amd64.deb

      - name: Configure Sysbox runtime
        # Ensure the target directory exists
        run: sudo mkdir -p /etc/docker && sudo cp sysbox/daemon.json /etc/docker/daemon.json

      - name: Restart docker service
        run: sudo systemctl restart docker.service

      - name: Build docker image
        # Use direct docker build for clarity and tagging
        run: docker build -t zsolangpg .

      - name: Run docker container in detached mode
        # Run in detached mode (-d ) and publish port 4444
        run: docker run --runtime=sysbox-runc -d -p 4444:4444 -p 3000:3000 --name zsolangpg_backend zsolangpg

      # - name: Wait for backend server to be ready
      #   # Replace fixed sleep with an active check loop
      #   run: |
      #     echo "Waiting for backend server on http://localhost:4444 to be ready..."
      #     timeout=90 # Wait for up to 1.5 minutes
      #     start_time=$(date +%s )
      #     while true; do
      #       current_time=$(date +%s)
      #       elapsed_time=$((current_time - start_time))
      #       if [ $elapsed_time -ge $timeout ]; then
      #         echo "Timeout waiting for backend server."
      #         docker logs zsolangpg_backend # Show logs on timeout
      #         exit 1
      #       fi
      #       # Check if the server is responding on the root path (adjust if needed)
      #       if curl -sf http://localhost:4444/; then
      #         echo "Backend server is ready."
      #         break
      #       fi
      #       echo "Backend not ready yet, sleeping 5s..."
      #       sleep 5
      #     done

      # Docker Hub Push Steps (Conditional)
      - name: Log in to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3 # Use latest version
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag Docker image for Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker tag zsolangpg ahmadsamehh/zsolangpg:latest

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker push ahmadsamehh/zsolangpg:latest

        
      # Needed to run tests - Ensure node_modules are available
      # Consider caching node_modules or running install if needed
      - name: Install npm dependencies (if not cached/included )
        # This assumes the test environment needs node_modules locally
        # If tests run inside the container, this step might differ
        run: cargo make deps-npm

      - name: Test application
        env:
          # Set the BACKEND_URL for the tests
          BACKEND_URL: http://localhost:4444
        run: cargo make test-app

      - name: Show container logs
        # Show logs regardless of test success/failure for debugging
        if: always( )
        run: docker logs zsolangpg_backend

      